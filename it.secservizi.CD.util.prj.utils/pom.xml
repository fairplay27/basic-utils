<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>it.secservizi.CD.util.prj</groupId>
  <artifactId>it.secservizi.CD.util.prj.utils</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>it.secservizi.CD.util.prj.utils</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <fully.qualified.main.class>it.secservizi.CD.util.prj.utils.app.DateUtils</fully.qualified.main.class>
  </properties>

  <dependencies>
  
  	 <!-- START per dipendenze logging-->	
	 <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-api</artifactId>
	    <version>1.7.2</version>
	</dependency>
	
	<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-log4j12 -->
	<dependency>
	    <groupId>org.slf4j</groupId>
	    <artifactId>slf4j-log4j12</artifactId>
	    <version>1.7.2</version>
	</dependency>
	<!-- END per dipendenze logging-->	
	
	<!-- START per dipendenze csv -->	
	<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-csv -->
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-csv</artifactId>
	    <version>1.1</version>
	</dependency>
	<!-- END per dipendenze csv -->


	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>3.8.1</version>
		<scope>test</scope>
	</dependency>
	
  </dependencies>

	<build>
		<plugins>

			<!--  OPZIONALE : solo per avere echo associata ad una specifica phase del lifecycle-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<echo>Esecuzione fase package con output su: ${project.build.directory}</echo>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--  specifica il livello di java -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!--  OPZIONALE: per produrre anche il jar dei sorgenti -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>


			<!-- START: avere le librerie referenziate dal jar su specifica destinazione 
				 Esempio: in C:\GITHUB\basic-utils\it.secservizi.CD.util.prj.utils\target\it.secservizi.CD.util.prj.utils-0.0.1-SNAPSHOT.lib
				-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
								<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.build.finalName}.lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
								<version>3.0.2</version>
				<configuration>
					<archive>
						<manifest>
							<!--  aggiunge classpath in base a quello del progetto -->
							<addClasspath>true</addClasspath>
							<classpathPrefix>${project.build.finalName}.lib/</classpathPrefix>
							<mainClass>${fully.qualified.main.class}</mainClass>
						</manifest>
						<!--  aggiunge ulteriori entrate custom al classpath -->
						<manifestEntries>
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

		<!-- END: avere ler librerie referenziate dal jar su specifica destinazione 
				 Esempio: in C:\GITHUB\basic-utils\it.secservizi.CD.util.prj.utils\target\it.secservizi.CD.util.prj.utils-0.0.1-SNAPSHOT.lib
				-->

		</plugins>
	</build>
  
</project>
